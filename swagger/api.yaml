openapi: 3.0.1
info:
  title: ZIP ZIP
  version: 0.0.1
servers:
- url: To be determined
tags:
- name: auth
  description: Auth related services
- name: user
  description: Operations about user

paths:
  /register:
    post:
      tags:
      - auth
      summary: Register a user
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        200:
          description: Registered phone number
          content: {}
        300:
          description: Phone number already registered
          content: {}
  /request-otp:
    post:
      tags:
      - auth
      summary: Requests OTP for already registered phone number.
      operationId: requestOTP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OtpRequest'
        required: true
      responses:
        200:
          description: Logged in and OTP saved to db
        400:
          description: User with phone number **** doesn't exist
  /verify-otp:
    post:
      tags:
      - auth
      summary: Verifies the given verification code.
      operationId: verifyOTP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OtpVerifyRequest'
        required: true
      responses:
        200:
          description: User **** was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
  /token/refresh:
    get:
      tags:
      - auth
      summary: Refresh the access token
      operationId: refreshToken
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
  /user-info:
    get:
      tags:
      - user
      summary: Get user info
      operationId: getUserInfo
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoResponse'
    put:
      tags:
      - user
      summary: Update user info
      operationId: updateUserInfo
      requestBody:
        description: Updated user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
        required: true
      responses:
        200:
          description: Successfuly updated
          content: {}
  /child/create:
    put:
      tags:
      - user
      summary: Creates a new child
      operationId: createChild
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChildCreateRequest'
        required: true
      responses:
        200:
          description: Created Child
  /child:
    post:
      tags:
      - user
      summary: Get child info
      operationId: getChildInfo
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildInfoResponse'
    put:
      tags:
      - user
      summary: Update child info
      operationId: updateChildInfo
      requestBody:
        description: Updated user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ChildUpdateRequest'
        required: true
      responses:
        200:
          description: Successfuly updated
  /child-list:
    get:
      tags:
      - user
      summary: List children
      operationId: listChildren
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildListResponse'
  
components:
  schemas:
    RegisterRequest:
      required:
      - phoneNumber
      - fullName
      - age
      - gender
      - permissionToContact
      - deviceId
      type: object
      properties:
        phoneNumber:
          type: string
          example: "05302435533"
        fullName:
          type: string
          example: Ahmet
        age:
          type: integer
          example: 45
        gender:
          type: integer
        permissionToContact:
          type: integer
        deviceId:
          type: string
          example: AD5245ESDFERZDC
      xml:
        name: Pet
    OtpRequest:
      required:
      - phoneNumber
      type: object
      properties:
        phoneNumber:
          type: string
          example: "05302435533"
      xml:
        name: Order
    OtpVerifyRequest:
      required:
      - phoneNumber
      - otp
      type: object
      properties:
        phoneNumber:
          type: string
          example: "05302435533"
        otp:
          type: string
          example: "$pbkdf2..."
      xml:
        name: Order
    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
      xml:
        name: Category
    AccessTokenResponse:
      type: object
      properties:
        access_token:
          type: string
      xml:
        name: User
    UserInfoResponse:
      type: object
      required:
      - age
      - fullName
      - gender
      - phoneNumber
      - email
      properties:
        fullName:
          type: string
          example: Ahmet
        age:
          type: integer
          example: 56
        gender:
          type: integer
          example: 0
        phoneNumber:
          type: string
          example: 05302445397
        email:
          type: string
          example: test@test.com
      xml:
        name: Tag
    UserUpdateRequest:
      type: object
      properties:
        phoneNumber:
          type: string
          example: 05353246534
        email:
          type: string
          example: test@test.com
        deviceId:
          type: string
          example: 245ASDE25DF42
        fullName:
          type: string
          example: Ahmet
        age:
          type: integer
          example: 49
        gender:
          type: integer
          example: 0
        permissionToContact:
          type: integer
          example: 0
      xml:
        name: Tag
    ChildCreateRequest:
      type: object
      required:
      - fullName
      - gender
      - age
      properties:
        fullName:
          type: string
          example: Ahmet
        age:
          type: integer
          example: 43
        gender:
          type: integer
          example: 0
    ChildInfoResponse:
      type: object
      required:
      - fullName
      - age
      - gender
      - favEvents
      - attendedEvents
      properties:
        fullName:
          type: string
          example: Ali
        age:
          type: integer
          example: 5
        gender:
          type: integer
          example: 0
        favEvents:
          type: array
          items:
            type: string
            example: id
        attendedEvents:
          type: array
          items:
            type: string
            example: id
      xml:
        name: Tag
    ChildUpdateRequest:
      type: object
      properties:
        fullName:
          type: string
          example: Ali
        age:
          type: integer
          example: 5
        gender:
          type: integer
          example: 0
    ChildListResponse:
      type: array
      items:
        $ref: '#/components/schemas/ChildInfo'
    ChildInfo:
      type: object
      properties:
        id:
          type: integer
          example: 32535
        fullName:
          type: string
          example: Ali
        age:
          type: integer
          example: 5
        gender:
          type: integer
          example: 0
        favEvents:
          type: array
          items:
            type: string
            example: id
        attendedEvents:
          type: array
          items:
            type: string
            example: id
